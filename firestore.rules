rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isAuthed() { return request.auth != null; }
    function isAdmin() { return isAuthed() && (request.auth.token.email == 'c8376325@gmail.com'); }

    // users
    match /users/{uid} {
      allow read: if isAuthed();
      allow create: if isAuthed() && request.auth.uid == uid;
      allow update: if isAuthed() && request.auth.uid == uid;
      allow delete: if isAdmin();
    }

    // echo (posts)
    match /echo/{echoId} {
      allow read: if isAuthed();
      allow create: if isAuthed();
      allow delete: if isAuthed() && (resource.data.authorId == request.auth.uid || isAdmin());
      allow update: if false;
    }

    match /likes/{likeId} {
      allow read: if isAuthed();
      allow create: if isAuthed();
      allow delete: if isAuthed() && (resource.data.userId == request.auth.uid || isAdmin());
    }

    match /replies/{replyId} {
      allow read: if isAuthed();
      allow create: if isAuthed();
      allow delete: if isAuthed() && (resource.data.authorId == request.auth.uid || isAdmin());
    }

    match /follows/{followId} {
      allow read: if isAuthed();
      allow create: if isAuthed();
      allow delete: if isAuthed() && (resource.data.followerId == request.auth.uid || isAdmin());
    }

    match /{document=**} { allow read, write: if false; }
  }
}
